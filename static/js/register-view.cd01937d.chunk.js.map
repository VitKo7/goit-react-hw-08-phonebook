{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","state","name","email","password","handleChange","target","value","setState","handleSubmit","evt","preventDefault","props","onRegister","this","onSubmit","style","autoComplete","type","onChange","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"8NAIMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIZC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAAAC,GACbA,EAAIC,iBACJ,EAAKC,MAAMC,WAAW,EAAKZ,OAC3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACrB,OACE,gCACE,qJAEA,uBACEW,SAAUD,KAAKL,aACfO,MAAOvB,EAAOC,KACduB,aAAa,MAHf,UAKE,wBAAOD,MAAOvB,EAAOG,MAArB,+BAEE,uBACEsB,KAAK,OACLhB,KAAK,OACLK,MAAOL,EACPiB,SAAUL,KAAKT,kBAInB,wBAAOW,MAAOvB,EAAOG,MAArB,2CAEE,uBACEsB,KAAK,QACLhB,KAAK,QACLK,MAAOJ,EACPgB,SAAUL,KAAKT,kBAInB,wBAAOW,MAAOvB,EAAOG,MAArB,iDAEE,uBACEsB,KAAK,WACLhB,KAAK,WACLK,MAAOH,EACPe,SAAUL,KAAKT,kBAInB,wBAAQa,KAAK,SAAb,oI,GA1DiBE,aAiErBC,EAAqB,CACzBR,WAAYS,IAAeC,UAGdC,sBAAQ,KAAMH,EAAdG,CAAkCxB","file":"static/js/register-view.cd01937d.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authOperations } from '../redux/auth';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nclass RegisterView extends Component {\n  state = {\n    name: '',\n    email: '',\n    password: '',\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = evt => {\n    evt.preventDefault();\n    this.props.onRegister(this.state);\n    this.setState({ name: '', email: '', password: '' });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <div>\n        <h1>Страница регистрации</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          style={styles.form}\n          autoComplete=\"off\"\n        >\n          <label style={styles.label}>\n            Имя\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Почта\n            <input\n              type=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label style={styles.label}>\n            Пароль\n            <input\n              type=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button type=\"submit\">Зарегистрироваться</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\nexport default connect(null, mapDispatchToProps)(RegisterView);\n"],"sourceRoot":""}